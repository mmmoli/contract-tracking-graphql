type Club {
   _id: Long!
   id: String!
   image: String!
   name: String!
   in_league: [League] @relation(name: "IN_LEAGUE", direction: "OUT")
   transfers_from_club: [Transfer] @relation(name: "FROM_CLUB", direction: "IN")
   transfers_to_club: [Transfer] @relation(name: "TO_CLUB", direction: "IN")
}

type Transfer {
   _id: Long!
   date: Date!
   id: String!
   value: Float!
   of_player: [Player] @relation(name: "OF_PLAYER", direction: "OUT")
   from_club: [Club] @relation(name: "FROM_CLUB", direction: "OUT")
   to_club: [Club] @relation(name: "TO_CLUB", direction: "OUT")
}

type League {
   _id: Long!
   href: String
   id: String!
   name: String!
   in_country: [Country] @relation(name: "IN_COUNTRY", direction: "OUT")
   clubs: [Club] @relation(name: "IN_LEAGUE", direction: "IN")
}

type Country {
   _id: Long!
   name: String!
   leagues: [League] @relation(name: "IN_COUNTRY", direction: "IN")
}

type Player {
   _id: Long!
   id: String!
   image: String!
   name: String!
   transfers: [Transfer] @relation(name: "OF_PLAYER", direction: "IN")
}


type Spending {
    club: String
    clubImage: String
    country: String
    countryImage: String
    moneySpent: Int
}

type Query {
  spendingByClub(countrySubstring: String = ""): [Spending]
  @cypher(
    statement: """MATCH (club:Club)-[*2]->(country:Country)
                  WHERE country.name CONTAINS $countrySubstring
                  WITH club, country, apoc.coll.sumLongs([(club)<-[:TO_CLUB]-(t) | t.value]) AS moneyOut
                  RETURN { club: club.name, clubImage: club.image, country: country.name, countryImage: country.image, moneySpent: moneyOut}"""
  )
}

